#include <stddef.h>
#include <stdint.h>
#include <io.hpp>

#ifndef DRIVERS_HPP
#define DRIVERS_HPP

#define ATA_PRIMARY_BUS_IO_PORT_BASE 0x1f0
#define ATA_DATA_REG (ATA_PRIMARY_BUS_IO_PORT_BASE)
#define ATA_ERROR_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 1)
#define ATA_FEATURES_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 1)
#define ATA_SECTOR_COUNT_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 2)
#define ATA_SECTOR_NUMBER_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 3)
#define ATA_CYLINDER_LOW_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 4)
#define ATA_CYLINDER_HIGH_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 5)
#define ATA_DRIVE_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 6)
#define ATA_STATUS_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 7)
#define ATA_COMMAND_REG (ATA_PRIMARY_BUS_IO_PORT_BASE + 7)

#define SECTOR_SIZE 512

#define ATA_PRIMARY_BUS_CONTROL_PORT_BASE 0x3f6
#define ATA_ALTERNATE_STATUS_REG (ATA_PRIMARY_BUS_CONTROL_PORT_BASE)
#define ATA_DEVICE_CONTROL_REG (ATA_PRIMARY_BUS_CONTROL_PORT_BASE)
#define ATA_DRIVE_ADDRESS_REG (ATA_PRIMARY_BUS_CONTROL_PORT_BASE + 1)

namespace DRIVERS {

    namespace DISK {
        extern size_t nail;

        void readDisk(size_t size, uint16_t* buffer);

        void setNail(size_t newNail);
    };
};

#endif  /* DRIVERS_HPP */
